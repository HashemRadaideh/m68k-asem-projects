00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 8/15/2022 8:36:17 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Demo vidoe :  https://youtu.be/1-Eppaii8_s
00000000                             3  * Title      :  String Searcher
00000000                             4  * Written by :  Hashem Al-Radaideh
00000000                             5  * Date       :  Saturday, 12th August 2022
00000000                             6  * Site       :  https://github.com/HashemRadaideh/m68k-project
00000000                             7  * Description:  
00000000                             8  * Write a 68000 assembly code that searches for a certain character in a 
00000000                             9  * null-terminated text stored in the memory and counts its occurrences in
00000000                            10  * that text.
00000000                            11  *
00000000                            12  * The code should use TRAP instruction to prompt the user to enter the
00000000                            13  * character he/she wants to search for.
00000000                            14  *
00000000                            15  * Then it calls a subroutine to find how many times the character occurs
00000000                            16  * in the text, and then it prints a message with the result on the screen.
00000000                            17  *
00000000                            18  * The code should also give the user the choice to enter another character
00000000                            19  * if he/she wants or exit the search.
00000000                            20  *-----------------------------------------------------------
00000000                            21  
00000420                            22      ORG    $420
00000420                            23  str  ds.b  100          ; same as in c/c++ (char str[100];)
00000484= 0064                      24  len  dc    len-str
00000486= 45 6E 74 65 72 20 ...     25  pr1  dc.b  'Enter a string to search in: ',0
000004A4= 001E                      26  ps1  dc    ps1-pr1
000004A6= 45 6E 74 65 72 20 ...     27  pr2  dc.b  'Enter a character to search for: ',0
000004C8= 0022                      28  ps2  dc    ps2-pr2
000004CA= 0D 0A 46 6F 75 6E ...     29  pr3  dc.b  CR,LF,'Found: ',0
000004D4= 000A                      30  ps3  dc    ps3-pr3
000004D6= 0D 0A 64 6F 20 79 ...     31  pre  dc.b  CR,LF,'do you wish to exit: [y|N]',0
000004F4= 001E                      32  pse  dc    pse-pre
000004F6= 0D 0A 20 00               33  crlf dc.b  CR,LF,' ',0  ; HACK: easy way to print newline
000004FA= 04                        34  nl   dc.b  nl-crlf      ; find string size automatically
000004FB  =0000000D                 35  CR   equ   $0D
000004FB  =0000000A                 36  LF   equ   $0A
000004FB                            37  
00001000                            38      ORG    $1000
00001000                            39  main:
00001000  43F8 0486                 40      lea     pr1,a1      ; load 1st prompt into A1
00001004  3238 04A4                 41      move.w  ps1,d1      ; D1 = prompt size
00001008  4280                      42      clr.l   d0          ; empty d0 for use with trap #15
0000100A  4E4F                      43      trap    #15         ; display prompt
0000100C                            44      
0000100C  43F8 0420                 45      lea     str,a1      ; store user entered string in str
00001010  3238 0484                 46      move.w  len,d1      ; store str size   
00001014  7002                      47      moveQ.l #2,d0       ; move literal 2 to d0
00001016  4E4F                      48      trap    #15         ; read a string from console
00001018                            49      
00001018  45D1                      50      lea     (a1),a2     ; move string to a2 for comparison
0000101A  1801                      51      move.b  d1,d4       ; move string size to d4 for the number of loops
0000101C                            52      
0000101C  43F8 04A6                 53      lea     pr2,A1      ; load 2nd prompt
00001020  3238 04C8                 54      move.w  ps2,D1
00001024  4280                      55      clr.l   d0
00001026  4E4F                      56      trap    #15
00001028                            57      
00001028  7005                      58      moveQ.l #5,d0       ; move literal 5 to d0
0000102A  4E4F                      59      trap    #15         ; read a single character from console
0000102C                            60      
0000102C  4285                      61      clr.l   d5          ; D5 used for as a sum counter (sum = 0)
0000102E                            62  loop:   
0000102E  B21A                      63      cmp.b   (A2)+,d1    ; if equal add 1 to sum
00001030  6600 0004                 64      bne     neq         ; else exit if statment
00001034  5285                      65      addQ.l  #1,d5       ; character was found
00001036  57CC FFF6                 66  neq dbeq    d4,loop    ; subtract one from d4 and loop back if needed
0000103A                            67   
0000103A  43F8 04CA                 68      lea     pr3,a1      ; print result prompt
0000103E  3238 04D4                 69      move.w  ps3,d1
00001042  4280                      70      clr.l   d0
00001044  4E4F                      71      trap    #15
00001046                            72      
00001046  3205                      73      move.w  d5,d1       ; print number of occurrences
00001048  7003                      74      moveQ.l #3,d0
0000104A  4E4F                      75      trap    #15    
0000104C                            76  
0000104C  43F8 04D6                 77      lea     pre,a1  `   ; print exit prompt
00001050  3238 04F4                 78      move.w  pse,d1
00001054  4280                      79      clr.l   d0
00001056  4E4F                      80      trap    #15
00001058                            81  
00001058  7005                      82      moveQ.l #5,d0       ; capture a single character
0000105A  4E4F                      83      trap    #15
0000105C                            84      
0000105C  3C01                      85      move    d1,d6       ; move user entered character to d6 for later use
0000105E                            86      
0000105E  43F8 04F6                 87      lea     crlf,a1     ; print new line
00001062  3238 04FA                 88      move.w  nl,d1
00001066  4280                      89      clr.l   d0
00001068  4E4F                      90      trap    #15
0000106A                            91      
0000106A  7E79                      92      moveQ.l #'y',d7     ; move 'y' to d7
0000106C  BE06                      93      cmp.b   d6,d7       ; compare 'y' to captured character
0000106E  6690                      94      bne     main        ; if answer == 'y' exit main loop else loop again
00001070                            95  
00001070  4E72 0A8C                 96      stop    #2700       ; end of program (return 0)
00001074  FFFF FFFF                 97      SIMHALT  
00001078                            98      END     main

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CR                  D
CRLF                4F6
LEN                 484
LF                  A
LOOP                102E
MAIN                1000
NEQ                 1036
NL                  4FA
PR1                 486
PR2                 4A6
PR3                 4CA
PRE                 4D6
PS1                 4A4
PS2                 4C8
PS3                 4D4
PSE                 4F4
STR                 420
